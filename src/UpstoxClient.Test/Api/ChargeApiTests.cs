/* 
 * OpenAPI definition
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using UpstoxClient.Client;
using UpstoxClient.Api;
using UpstoxClient.Model;

namespace UpstoxClient.Test
{
    /// <summary>
    ///  Class for testing ChargeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ChargeApiTests
    {
        private ChargeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ChargeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ChargeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChargeApi
            //Assert.IsInstanceOfType(typeof(ChargeApi), instance, "instance is a ChargeApi");
        }

        /// <summary>
        /// Test GetBrokerage
        /// </summary>
        [Test]
        public void GetBrokerageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instrumentToken = null;
            //int? quantity = null;
            //string product = null;
            //string transactionType = null;
            //float? price = null;
            //string apiVersion = null;
            //var response = instance.GetBrokerage(instrumentToken, quantity, product, transactionType, price, apiVersion);
            //Assert.IsInstanceOf<GetBrokerageResponse> (response, "response is GetBrokerageResponse");
        }
    }

}
