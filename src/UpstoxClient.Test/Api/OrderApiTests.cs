/* 
 * OpenAPI definition
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using UpstoxClient.Client;
using UpstoxClient.Api;
using UpstoxClient.Model;

namespace UpstoxClient.Test
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderApiTests
    {
        private OrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderApi
            //Assert.IsInstanceOfType(typeof(OrderApi), instance, "instance is a OrderApi");
        }

        /// <summary>
        /// Test CancelOrder
        /// </summary>
        [Test]
        public void CancelOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string apiVersion = null;
            //var response = instance.CancelOrder(orderId, apiVersion);
            //Assert.IsInstanceOf<CancelOrderResponse> (response, "response is CancelOrderResponse");
        }
        /// <summary>
        /// Test GetOrderBook
        /// </summary>
        [Test]
        public void GetOrderBookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiVersion = null;
            //var response = instance.GetOrderBook(apiVersion);
            //Assert.IsInstanceOf<GetOrderBookResponse> (response, "response is GetOrderBookResponse");
        }
        /// <summary>
        /// Test GetOrderDetails
        /// </summary>
        [Test]
        public void GetOrderDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiVersion = null;
            //string orderId = null;
            //string tag = null;
            //var response = instance.GetOrderDetails(apiVersion, orderId, tag);
            //Assert.IsInstanceOf<GetOrderResponse> (response, "response is GetOrderResponse");
        }
        /// <summary>
        /// Test GetTradeHistory
        /// </summary>
        [Test]
        public void GetTradeHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiVersion = null;
            //var response = instance.GetTradeHistory(apiVersion);
            //Assert.IsInstanceOf<GetTradeResponse> (response, "response is GetTradeResponse");
        }
        /// <summary>
        /// Test GetTradesByOrder
        /// </summary>
        [Test]
        public void GetTradesByOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string apiVersion = null;
            //var response = instance.GetTradesByOrder(orderId, apiVersion);
            //Assert.IsInstanceOf<GetTradeResponse> (response, "response is GetTradeResponse");
        }
        /// <summary>
        /// Test ModifyOrder
        /// </summary>
        [Test]
        public void ModifyOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModifyOrderRequest body = null;
            //string apiVersion = null;
            //var response = instance.ModifyOrder(body, apiVersion);
            //Assert.IsInstanceOf<ModifyOrderResponse> (response, "response is ModifyOrderResponse");
        }
        /// <summary>
        /// Test PlaceOrder
        /// </summary>
        [Test]
        public void PlaceOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PlaceOrderRequest body = null;
            //string apiVersion = null;
            //var response = instance.PlaceOrder(body, apiVersion);
            //Assert.IsInstanceOf<PlaceOrderResponse> (response, "response is PlaceOrderResponse");
        }
    }

}
